---
version: "3"

services:
  postgres:
    container_name: postgres
    restart: always
    image: postgres:14.1
    environment:
      - POSTGRES_USER=origin
      - POSTGRES_PASSWORD=origin
      - POSTGRES_DB=origin
    ports:
      - "5432:5432"

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    ports:
      - "9200:9200"
    environment:
      network.bind_host: 0
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    logging:
      driver: none

  redis-master:
    container_name: redis-master
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'

  services:
    container_name: services
    image: origin
    build:
      context: .
      dockerfile: Dockerfile
    volumes: &volumes
      - ./lerna.json:/app/lerna.json
      # Mount source code for all packages from host
      - ./packages/contracts/build:/app/packages/contracts/build
      # Contract migrations that get run when @origin/services starts
      - ./packages/contracts/migrations:/app/packages/contracts/migrations
      # Core packages
      - ./packages/services/:/app/packages/services/
      - ./packages/services/data/localhost.key:/app/packages/services/data/localhost.key
      - ./packages/services/data/localhost.cert:/app/packages/services/data/localhost.cert
      - ./packages/web3-provider/:/app/packages/web3-provider/
      - ./packages/graphql/:/app/packages/graphql/
      - ./packages/eventsource/:/app/packages/eventsource/
      - ./packages/event-cache/:/app/packages/event-cache/
      - ./packages/ip2geo/:/app/packages/ip2geo/
      - ./packages/ipfs/:/app/packages/ipfs/
      - ./packages/messaging-client/:/app/packages/messaging-client/
      - ./packages/mobile-bridge/:/app/packages/mobile-bridge/
      - ./packages/validator:/app/packages/validator/
      - ./packages/token/:/app/packages/token/
      - ./packages/auth-client/:/app/packages/auth-client/
      - ./packages/utils/:/app/packages/utils/
      # Infrastructure packages
      - ./infra/bridge/:/app/infra/bridge/
      - ./infra/discovery/:/app/infra/discovery/
      - ./infra/ipfs-proxy/:/app/infra/ipfs-proxy/
      - ./infra/messaging/:/app/infra/messaging/
      - ./infra/notifications/:/app/infra/notifications/
      - ./infra/growth/:/app/infra/growth/
      - ./infra/growth-shared/:/app/infra/growth-shared/
      - ./infra/identity/:/app/infra/identity/
      - ./infra/auth-server/:/app/infra/auth-server/
      - ./packages/auth-utils/:/app/packages/auth-utils/
      # Exclude IPFS and blockchain data from @origin/services
      - /app/packages/services/data
      # Exclude all node_modules from the host
      - /app/packages/services/node_modules/
      - /app/packages/graphql/node_modules/
      - /app/packages/eventsource/node_modules/
      - /app/packages/event-cache/node_modules/
      - /app/packages/ipfs/node_modules/
      - /app/packages/ip2geo/node_modules/
      - /app/packages/messaging-client/node_modules/
      - /app/packages/mobile-bridge/node_modules/
      - /app/packages/validator/node_modules/
      - /app/packages/token/node_modules/
      - /app/packages/auth-client/node_modules/
      - /app/infra/bridge/node_modules/
      - /app/infra/discovery/node_modules/
      - /app/infra/ipfs-proxy/node_modules/
      - /app/infra/messaging/node_modules/
      - /app/infra/notifications/node_modules/
      - /app/infra/growth/node_modules/
      - /app/infra/growth-shared/node_modules/
      - /app/infra/identity/node_modules/
      - /app/infra/auth-server/node_modules/
      - /app/packages/auth-utils/node_modules/
    ports:
      # IPFS ports are exposed here for convenience but IPFS should be
      # interacted with via ipfs-proxy
      - "5002:5002"
      - "8080:8080"
      - "8545:8545"
    environment:
      - DOCKER=true
      - DEPLOY_CONTRACTS=true
      - DATABASE_URL=postgres://origin:origin@postgres/origin
    depends_on:
      - postgres
    command:
      >
      /bin/bash -c "npm run migrate --prefix infra/discovery &&
      npm run migrate --prefix infra/growth &&
      npm run migrate --prefix infra/growth-shared &&
      npm run migrate --prefix infra/identity &&
      npm run migrate --prefix infra/notifications &&
      npm run migrate --prefix infra/bridge &&
      npm run migrate --prefix infra/messaging &&
      npm run migrate --prefix packages/event-cache &&
      npm run migrate --prefix packages/auth-utils &&
      npm run start --prefix packages/services -- -g -i -p -f -t"

  messaging:
    container_name: messaging
    image: origin
    volumes: *volumes
    environment:
      - DATABASE_URL=postgres://origin:origin@postgres/origin
      - REDIS_URL=redis://redis-master:6379
      - NOTIFICATIONS_ENDPOINT_URL=http://notifications:3456/messages
      - NETWORK=docker
    depends_on:
      - postgres
      - redis-master
    ports:
      - "6647:6647"
      - "9012:9012"
    command:
      >
      /bin/bash -c "wait-for.sh -t 0 -q postgres:5432 --
      wait-for.sh -t 0 -q services:1111 --
      npm run start --prefix infra/messaging"

  ipfs-proxy:
    container_name: ipfs-proxy
    image: origin
    volumes: *volumes
    ports:
      - "9999:9999"
    environment:
      - IPFS_API_URL=http://services:5002
      - IPFS_GATEWAY_URL=http://services:8080
    command: npm run start --prefix infra/ipfs-proxy

  event-listener:
    container_name: event-listener
    image: origin
    volumes: *volumes
    environment:
      - DATABASE_URL=postgres://origin:origin@postgres/origin
      - DISCORD_WEBHOOK=
      - ELASTICSEARCH=true
      - ELASTICSEARCH_HOST=elasticsearch:9200
      - EMAIL_WEBHOOK=
      - GCLOUD_PUBSUB_TOPIC=
      - GCLOUD_PROJECT_ID=
      - INDEX_MARKETPLACE=true
      - INDEX_IDENTITY=true
      - INDEX_GROWTH=true
      - INDEX_PROXY=true
      - TRAIL_BEHIND_BLOCKS=
      - NETWORK=docker
      - NOTIFICATIONS_WEBHOOK=
      - PROVIDER_URL=http://services:1111
      - IPFS_GATEWAY_URL=http://ipfs-proxy:9999
      - IPFS_API_URL=http://ipfs-proxy:9999
      - REDIS_URL=redis://redis-master:6379
      - ENVKEY=
      - MESSAGING_EVENTS=
      - EVENTCACHE_ENABLE_PG=true
    depends_on:
      - postgres
      - elasticsearch
      - ipfs-proxy
      - services
    command:
      >
      /bin/bash -c "wait-for.sh -t 0 -q elasticsearch:9200 --
      wait-for.sh -t 0 -q services:1111 --
      npm run start:listener --prefix infra/discovery"

  discovery:
    container_name: discovery
    image: origin
    volumes: *volumes
    environment:
      - DATABASE_URL=postgres://origin:origin@postgres/origin
      - REDIS_URL=redis://redis-master:6379
      - ELASTICSEARCH_HOST=elasticsearch:9200
      - ELASTICSEARCH=true
      - NETWORK=docker
      - MODERATOR_ADDRESSES=0x627306090abaB3A6e1400e9345bC60c78a8BEf57,0xf17f52151EbEF6C7334FAD080c5704D77216b732
      - ENVKEY=
    depends_on:
      - postgres
      - elasticsearch
      - ipfs-proxy
      - services
    ports:
      - "4000:4000"
    command:
      >
      /bin/bash -c "wait-for.sh -t 0 -q elasticsearch:9200 --
      wait-for.sh -t 0 -q services:1111 --
      node infra/discovery/devops/es-cli.js createIndex listings &&
      npm run start:discovery --prefix infra/discovery"

  graphql:
    container_name: graphql
    image: origin
    volumes: *volumes
    environment:
      - DOCKER=true
      - NETWORK=docker
      - GRAPHQL_SERVER_PORT=4007
      - PROVIDER_URL=http://services:1111
      - PROVIDER_WS_URL=ws://services:1111
      - IPFS_GATEWAY_URL=http://ipfs-proxy:9999
      - IPFS_API_URL=http://ipfs-proxy:9999
      - DISCOVERY_SERVER_URL=http://discovery:4000/graphql
      - BRIDGE_SERVER_URL=http://bridge:5000
      - GROWTH_SERVER_URL=http://growth:4008
      - DATABASE_URL=postgres://origin:origin@postgres/origin
      - EVENTCACHE_ENABLE_PG=true
      - EVENTCACHE_SLAVE=true
    depends_on:
      - discovery
    ports:
      - "4007:4007"
    command:
      >
      /bin/bash -c "wait-for.sh -t 0 -q services:1111 --
      npm run start --prefix packages/graphql"

  notifications:
    container_name: notifications
    image: origin
    volumes: *volumes
    depends_on:
      - postgres
    environment:
      - APNS_BUNDLE_ID=com.originprotocol.catcher
      - APNS_KEY_FILE=
      - APNS_KEY_ID=
      - APNS_PRODUCTION=false
      - APNS_TEAM_ID=
      - DATABASE_URL=postgres://origin:origin@postgres/origin
        # Service account for Firebase
      - FIREBASE_SERVICE_JSON=
      - FIREBASE_DB_URL=
      - |
        AUTH_PUB_KEY=-----BEGIN PUBLIC KEY-----
        MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAzO41ktS3XoXFnHs/Yxcc
        2/BcBBFadv+dD02V72RaD6KOZZZ0Uq4zrSATAHhMf/HDpCXww286+rkHCHaVwMcW
        /iaT0f0ThPy9vp6GYXLYdUh5dyr4wUqMQirV3wGEUjbpLHAHaSR5N0OFLEV5Px7F
        PQr0Azz96gKHUoaVeCdiWVSs295fEI+lOBnD93zqWwb2N9UPV2ltga5ju3AsSYv6
        Ui5IWAMM9cJ5UDHMC0+wCnhPxn98e1jT3frXCzSt3IiduyuvsZUxJmBkwOfsXKqS
        ndK6eiVRajO3d/qORVPHQ2w4kkgs6M2t6vxxr9juRy11eYEw1KLXYiDXEVosIqYZ
        hGo2UrKC2oDkME/VZqHKiP8rjd9tBlK/BpH5YhnaOyKV7U3MKlvbVn3HyAJE6KuE
        sjU7i43SaW3rLref4DKbiJGCYhOI+J7AvRp26HSFAQhHh0k0K33zDDuxrCPom6rt
        4fGG8mqunuh6X6LeZh1TsoAuPyJMt1WkQA7gsRUmPkqSRLjLrKCPmYCf/9jIEjXB
        rUoGF0MQ2mNfCoupv7psb0+AfH00p/P9alZ8UxU1uDlydzGHjSOMnRM9Jgi1nSAR
        ENEa8ux7V7N46AgKyQW4pAyn6q5kkkNzVUSTpNTbG4WW6jNMJdw5ENbYeB7DoBjC
        JSbqa16RDaDk39v+49ke8TkCAwEAAQ==
        -----END PUBLIC KEY-----
    ports:
      - "3456:3456"
    command:
      >
      /bin/bash -c "wait-for.sh -t 0 -q postgres:5432 --
      wait-for.sh -t 0 -q services:1111 --
      npm run start --prefix infra/notifications"

  growth:
    container_name: growth
    image: origin
    volumes: *volumes
    environment:
      - DATABASE_URL=postgres://origin:origin@postgres/origin
      - ENVKEY=
      - |
        AUTH_PUB_KEY=-----BEGIN PUBLIC KEY-----
        MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAzO41ktS3XoXFnHs/Yxcc
        2/BcBBFadv+dD02V72RaD6KOZZZ0Uq4zrSATAHhMf/HDpCXww286+rkHCHaVwMcW
        /iaT0f0ThPy9vp6GYXLYdUh5dyr4wUqMQirV3wGEUjbpLHAHaSR5N0OFLEV5Px7F
        PQr0Azz96gKHUoaVeCdiWVSs295fEI+lOBnD93zqWwb2N9UPV2ltga5ju3AsSYv6
        Ui5IWAMM9cJ5UDHMC0+wCnhPxn98e1jT3frXCzSt3IiduyuvsZUxJmBkwOfsXKqS
        ndK6eiVRajO3d/qORVPHQ2w4kkgs6M2t6vxxr9juRy11eYEw1KLXYiDXEVosIqYZ
        hGo2UrKC2oDkME/VZqHKiP8rjd9tBlK/BpH5YhnaOyKV7U3MKlvbVn3HyAJE6KuE
        sjU7i43SaW3rLref4DKbiJGCYhOI+J7AvRp26HSFAQhHh0k0K33zDDuxrCPom6rt
        4fGG8mqunuh6X6LeZh1TsoAuPyJMt1WkQA7gsRUmPkqSRLjLrKCPmYCf/9jIEjXB
        rUoGF0MQ2mNfCoupv7psb0+AfH00p/P9alZ8UxU1uDlydzGHjSOMnRM9Jgi1nSAR
        ENEa8ux7V7N46AgKyQW4pAyn6q5kkkNzVUSTpNTbG4WW6jNMJdw5ENbYeB7DoBjC
        JSbqa16RDaDk39v+49ke8TkCAwEAAQ==
        -----END PUBLIC KEY-----
    depends_on:
      - postgres
    ports:
      - "4008:4008"
    command:
      >
      /bin/bash -c "wait-for.sh -t 0 -q services:1111 --
      npm run fixtures --prefix infra/growth &&
      npm run start --prefix infra/growth"

  bridge:
    container_name: bridge
    image: origin
    volumes: *volumes
    environment:
      - DATABASE_URL=postgres://origin:origin@postgres/origin
      - REDIS_URL=redis://redis-master:6379
      - GROWTH_SERVER_URL=http://growth:4008
      - FACEBOOK_CLIENT_ID=
      - FACEBOOK_CLIENT_SECRET=
      - GOOGLE_CLIENT_ID=
      - GOOGLE_CLIENT_SECRET=
      # Sendgrid settings for email attestations
      # sendgrid.com
      - SENDGRID_FROM_EMAIL=
      - SENDGRID_API_KEY=
      - EMAIL_ATTESTATION_AUTOPASS=true
      # Junk key for testing purposes
      - ATTESTATION_ACCOUNT=0x5be37555816d258f5e316e0f84d59335db2400b2
      - ATTESTATION_SIGNING_KEY=0x88e96d4537bea4d9c05d12549907b32561d3bf31f45aae734cdc119f13406cb6
      # Twilio verify API key for phone attestations
      # https://www.twilio.com/console/verify/applications
      - TWILIO_VERIFY_API_KEY
      - TWITTER_CONSUMER_KEY=
      - TWITTER_CONSUMER_SECRET=
      - ENVKEY=
      - |
        AUTH_PUB_KEY=-----BEGIN PUBLIC KEY-----
        MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAzO41ktS3XoXFnHs/Yxcc
        2/BcBBFadv+dD02V72RaD6KOZZZ0Uq4zrSATAHhMf/HDpCXww286+rkHCHaVwMcW
        /iaT0f0ThPy9vp6GYXLYdUh5dyr4wUqMQirV3wGEUjbpLHAHaSR5N0OFLEV5Px7F
        PQr0Azz96gKHUoaVeCdiWVSs295fEI+lOBnD93zqWwb2N9UPV2ltga5ju3AsSYv6
        Ui5IWAMM9cJ5UDHMC0+wCnhPxn98e1jT3frXCzSt3IiduyuvsZUxJmBkwOfsXKqS
        ndK6eiVRajO3d/qORVPHQ2w4kkgs6M2t6vxxr9juRy11eYEw1KLXYiDXEVosIqYZ
        hGo2UrKC2oDkME/VZqHKiP8rjd9tBlK/BpH5YhnaOyKV7U3MKlvbVn3HyAJE6KuE
        sjU7i43SaW3rLref4DKbiJGCYhOI+J7AvRp26HSFAQhHh0k0K33zDDuxrCPom6rt
        4fGG8mqunuh6X6LeZh1TsoAuPyJMt1WkQA7gsRUmPkqSRLjLrKCPmYCf/9jIEjXB
        rUoGF0MQ2mNfCoupv7psb0+AfH00p/P9alZ8UxU1uDlydzGHjSOMnRM9Jgi1nSAR
        ENEa8ux7V7N46AgKyQW4pAyn6q5kkkNzVUSTpNTbG4WW6jNMJdw5ENbYeB7DoBjC
        JSbqa16RDaDk39v+49ke8TkCAwEAAQ==
        -----END PUBLIC KEY-----
    depends_on:
      - postgres
      - redis-master
    ports:
      - "5000:5000"
    command:
      >
      /bin/bash -c "wait-for.sh -t 0 -q postgres:5432 --
      wait-for.sh -t 0 -q redis-master:6379 --
      wait-for.sh -t 0 -q services:1111 --
      npm run start --prefix infra/bridge"

  auth-server:
    container_name: auth-server
    image: origin
    volumes: *volumes
    environment:
      - DATABASE_URL=postgres://origin:origin@postgres/origin
      - |
        AUTH_PUB_KEY=-----BEGIN PUBLIC KEY-----
        MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAzO41ktS3XoXFnHs/Yxcc
        2/BcBBFadv+dD02V72RaD6KOZZZ0Uq4zrSATAHhMf/HDpCXww286+rkHCHaVwMcW
        /iaT0f0ThPy9vp6GYXLYdUh5dyr4wUqMQirV3wGEUjbpLHAHaSR5N0OFLEV5Px7F
        PQr0Azz96gKHUoaVeCdiWVSs295fEI+lOBnD93zqWwb2N9UPV2ltga5ju3AsSYv6
        Ui5IWAMM9cJ5UDHMC0+wCnhPxn98e1jT3frXCzSt3IiduyuvsZUxJmBkwOfsXKqS
        ndK6eiVRajO3d/qORVPHQ2w4kkgs6M2t6vxxr9juRy11eYEw1KLXYiDXEVosIqYZ
        hGo2UrKC2oDkME/VZqHKiP8rjd9tBlK/BpH5YhnaOyKV7U3MKlvbVn3HyAJE6KuE
        sjU7i43SaW3rLref4DKbiJGCYhOI+J7AvRp26HSFAQhHh0k0K33zDDuxrCPom6rt
        4fGG8mqunuh6X6LeZh1TsoAuPyJMt1WkQA7gsRUmPkqSRLjLrKCPmYCf/9jIEjXB
        rUoGF0MQ2mNfCoupv7psb0+AfH00p/P9alZ8UxU1uDlydzGHjSOMnRM9Jgi1nSAR
        ENEa8ux7V7N46AgKyQW4pAyn6q5kkkNzVUSTpNTbG4WW6jNMJdw5ENbYeB7DoBjC
        JSbqa16RDaDk39v+49ke8TkCAwEAAQ==
        -----END PUBLIC KEY-----

      - |
        AUTH_PRIV_KEY=-----BEGIN ENCRYPTED PRIVATE KEY-----
        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
        43KQyeC6dYatqM+ZZOl0LEHQi95Xv3nEF/xgbekjumz9w109sgtsOy3+hjkblNvQ
        MOXCTCmfA6LAAQvYejj4FXI73OmPwuzI2YNx6LOYUClzSEMyAdu6eW3mRit3TohX
        GV7ZyrRdx1aSuhOOX0gleVjWhHBr/uVW/39xHEDXCnE60gigS3BXd0qSijyI91ge
        T6cNn+UQn+MEED9TabLbNLLCebYnt4BwJq0QdR3qEiqh/uVHF5CqZr0pjk7xEC6d
        HIJtrWMU3TJ8p8fBa8qirZFqFlqNE2dU7ToIDBIh43ZpWwKhE8pRrXU7ckDPHRPJ
        bczehlXLTLxZ63VuEMEV34MLX9Ex7mjnIUDxiKZf5pyK/rxggs33T+Rfbx19tq6Q
        tHciWOs1D3zwO61x92zM//u9YqCScMFv/Q2wuqeWFri8IbQoGJL1KjlwLXKK0chA
        DKCWtpwTayzNwYuEPMkhwELnvd8eiqDAXobe4eKAw68T4nkwIyt5wI9f6Mb2afAZ
        9kN/lfa9H6rKtyP/aSQJxPUpqfnTvZNsZMMPKsC8qc/5FaJUZwgRcCBDkqyOZGN2
        SePnO/LsNetnsQsxHv6SsS+LNOiKPmKHfmjIKYjQkDc59IIjS1Fr+Ninq19PStGi
        2iVnxUHiejBjG9z2VqKiVPOO2szrMGWXzjc7JbhwU9fcsT8YTm9LJK5oCoe0L4rT
        22HMUCHEalxeuZOW/crj/Wd9adIUPDWMzsaOqVmkLB4siHGhzjDsAO8UDJWiqPDe
        bxnA5Jj0I6dLIgdsKIWLQ9/6xIYguZHuDi+vyG+KlJiTRiGLLUuuQb8NsaXylsq6
        Fs9d3SIMTT6DUqJKOaZgeHfofiSQbK7c/oenMYWFQomg0VaSs9fZJxWVCDDiFzEW
        04fZye3reSkM6qsrK/KmcdXVrQolx4guW43tHRhldo72vQ2vGcy8ZLLfYPlI8x6d
        4PwqlbPzVc5w0xtEVD5c1AiB7/Xqk1QmyVSO04rToDLW/oKIi8DE5NTWSCP6ovup
        mmpWbGMKP8U+huq1l3I92kQ8cX6CloSFZ71Fc+fna8SDi140VGJG18qezaPfoq3z
        cMVnTPM+p4wMEyJT2j99HzRlTHguFSw6wyNleFSd6Osb
        -----END ENCRYPTED PRIVATE KEY-----
        
      - TOKEN_EXPIRES_IN=30
      - SIGN_EXPIRES_IN=15
    depends_on:
      - postgres
      - redis-master
    ports:
      - "5200:5200"
    command: npm run start --prefix infra/auth-server
